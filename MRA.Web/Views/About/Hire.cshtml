@using MRA.Services
@using MRA.Web.Models.About
@model ResumeModel

@{
    ViewData["Title"] = "Currículum";
}


@section Styles {
    <link href="~/css/resume.css" rel="stylesheet" asp-append-version="true" />
}

<div class="mr-container-portofolio">

 

    <div class="container" id="divInfoPrint">
        <div class="row">

            <div class="col-sm-12">
                <div class="alert alert-primary" role="alert">
                    <i class="bi bi-printer"></i> Esta página está <strong>optmizada para ser impresa</strong>.
                    Pulsa <kbd><kbd>Ctrl</kbd> + <kbd>P</kbd></kbd> para imprimir.
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <div class="row">
            <div class="col-sm-8 col-md-8">
                <h1>
                    Datos Personales
                </h1>
                <div class="mr-personal-data">
                            <div class="data-section">
                                <div class="title">
                                    Edad
                                </div>
                                <div class="value">
                                    @{
                                        DateTime fechaInicial = new DateTime(1996, 1, 12);
                                        DateTime fechaActual = DateTime.Now;
                                        int añosPasados = fechaActual.Year - fechaInicial.Year;
                                        if (fechaActual.Month < fechaInicial.Month || (fechaActual.Month == fechaInicial.Month && fechaActual.Day < fechaInicial.Day))
                                        {
                                            añosPasados--;
                                        }
                                    }
                                    @añosPasados
                                </div>
                            </div>
                            <div class="data-section">
                                <div class="title">
                                    Ciudad
                                </div>
                                <div class="value">
                                    Alcalá de Henares
                                </div>
                            </div>
                            <div class="data-section">
                                <div class="title">
                                    Formación
                                </div>
                                <div class="value">
                                    Grado en Ingeniería Informática en la <a href="https://www.uah.es/es/">UAH (Universidad de Alcalá)</a> en 2018.
                                </div>
                            </div>

                            <div class="data-section">
                                <div class="title">
                                    Idiomas
                                </div>
                                <div class="value">
                                    Español (nativo), Inglés (APTIS C)
                                </div>
                            </div>
                            <div class="data-section">
                                <div class="title">
                                    Enlaces
                                </div>
                                <div class="value">
                                    <div class="mr-social-links">
                                        @{
                                            var links = new List<Tuple<string, string, string>>()
                                        {
                                        Tuple.Create("LinkedIn", "linkedin", "https://www.linkedin.com/in/miguelromeral/"),
                                        Tuple.Create("GitHub", "github", "https://github.com/miguelromeral/"),
                                        Tuple.Create("Google Play", "google-play", "https://play.google.com/store/apps/dev?id=8494694764432462089"),
                                        };
                                            foreach (var link in links)
                                            {
                                                <div class="mr-social-link-section">
                                                    <div class="mr-social-link-title">
                                                        <a href="@link.Item3" target="_blank">
                                                            <i class="bi bi-@link.Item2"></i>
                                                            <span class="show-only-print">@link.Item1</span>
                                                        </a>
                                                    </div>


                                                    <div>
                                                        <div class="mr-qr-code show-only-print" data-link="@(link.Item3)">
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        }
                                    </div>
                                </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-4 col-md-4">
                <div class="portfolio-item no-hide cv-pic">
                    <img src="~/assets/images/cv_profile_pic.jpeg" />
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <h1>
                    Certificaciones
                </h1>
                <div>
                    @foreach(var group in Model.Resume.Certifications.GroupBy(x => x.IssuedBy))
                    {
                        <h6>@group.Key</h6>
                        <div class="mr-certifications-container">
                        @foreach(var cert in group.OrderByDescending(x => x.Date))
                        {
                            <div class="mr-certification-row">
                                <img src="@cert.BadgeSrc" />
                                <div class="mr-certification-details">
                                    <a href="@cert.Link">@cert.Name</a>
                                    <span class="date" title="@cert.Date.ToString("dd/MM/yyyy")">
                                        @Utilities.FormattedDateMini(cert.Date.ToString("yyyy/MM/dd"))
                                    </span>
                                </div>
                            </div>
                            
                        }
                        </div>
                    }
                </div>

            </div>
            <div class="col-sm-4 col-md-4">
            </div>

        </div>
    </div>


    @* <div class="mr-portofolio-img portfolio-item no-hide">
        <img src="https://www.prodwaregroup.com/es-es/wp-content/uploads/sites/23/2020/02/prodware-office1-1-2560x1069.jpg" />
    </div> *@
    
    <div class="container">
        <div class="row">
            <div class="col-sm-12 col-md-12">
                <h1>
                    Experiencia
                </h1>
            </div>
        </div>
    </div>

    @foreach(var empresa in Model.Resume.Experiences.OrderByDescending(x => x.Orden))
    {
        await Html.RenderPartialAsync("ExperienceView", empresa);
    }
</div>


@section Scripts {
    <script src="https://cdn.rawgit.com/davidshimjs/qrcodejs/gh-pages/qrcode.min.js"></script>
    <script asp-append-version="true">
        const mrBody = document.querySelector(".mr-body");

        mrBody.addEventListener('scroll', revealOnScroll);
        mrBody.addEventListener('touchmove', revealOnScroll);
        mrBody.addEventListener('touchend', revealOnScroll);
        mrBody.addEventListener('touchcancel', revealOnScroll);

        function revealOnScroll() {
            var items = document.querySelectorAll('.portfolio-item');

            items.forEach(function (item) {
                if (isElementInViewport(item)) {
                    item.classList.add('active');
                } else {
                    if (!item.classList.contains("no-hide")) {
                        item.classList.remove('active');
                    }
                }
            });
        }

        function isElementInViewport(el) {
            var rect = el.getBoundingClientRect();

            return (
                rect.top >= 0 &&
                rect.left >= 0 &&
                rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&
                rect.right <= (window.innerWidth || document.documentElement.clientWidth)
            );
        }

        // Llama a revealOnScroll al cargar la página para verificar si algunos elementos ya están en el viewport
        revealOnScroll();


        document.addEventListener("DOMContentLoaded", function () {
            var qrCodeElements = document.querySelectorAll('.mr-qr-code');

            qrCodeElements.forEach(function (element) {
                var url = element.getAttribute('data-link');
                loadQrCode(element, url);
            });
        });

        function loadQrCode(element, url){
            var options = {
                text: url,
                width: 64,
                height: 64,
            };

            var qrcode = new QRCode(element, options);
        }

    </script>
}