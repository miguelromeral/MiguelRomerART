@using MRA.Services
@using MRA.Web.Models.Images
@model IndexModel

@{
    ViewData["Title"] = "Galería";
}

@section Styles {
    <link href="~/css/images.css" rel="stylesheet" />
    <link href="~/css/image-thumbnail.css" rel="stylesheet" />
    <style>

        #spResultsCount {
            transition: var(--mr-transition-time) ease-in-out;
        }

        #divNoResults {
            display: flex;
            min-height: 100px;
            align-items: center;
            flex-direction: column;
            justify-content: flex-start;
            gap: 10px;
            margin-top: 50px;
        }

        /* #sFilterSoftware, #sFilterPaper {
            display: none;
        } */

        .choice-label {
            color: var(--mr-color-gold);
            background-color: transparent;
            border: 1px solid var(--mr-color-gold);
            padding: 0px 10px;
            border-radius: 20px;
            transition: var(--mr-transition-time) ease-out;
            cursor: pointer;
        }

        .mr-choice-filter:has(input:checked) .choice-label {
            color: black;
            background-color: var(--mr-color-gold);
        }

        .mr-choice-filter input {
            display: none;
        }

    </style>
}


<div>
    <h1>🎨 Galería</h1>
    <p>
        Aquí están algunos de mis dibujos e ilustraciones públicas. <strong>Pulsa en cualquiera de ellos para ver los detalles</strong>.
    </p>
</div>


<form id="formFilter" asp-action="Filter" asp-controller="Art"
      data-ajax="true" data-ajax-method="POST"
      data-ajax-begin="onBeginFilter" data-ajax-failure="onFailureFilter"
      data-ajax-success="onSuccessFilter" data-ajax-complete="onCompleteFilter">
    <div class="row">
        <div class="mr-sort-filter-container" data-bs-theme="dark">
            <div class="mr-sort-filter">
                <span>
                    Ordenar por...
                </span>
                <select class="mr-custom-select filters form-select form-select-sm" name="Sortby" aria-label="Default select example" data-bs-theme="dark" onchange="sendFormFilterGallery()"
                        data-bs-theme="dark">
                    <option value="date-desc">Nuevos Primero</option>
                    <option value="date-asc">Viejos Primero</option>
                    <option value="name-asc">Nombre (Ascendente)</option>
                    <option value="name-desc">Nombre (Descendente)</option>
                    <option value="kudos-desc">Más Kudos</option>
                    <option value="kudos-asc">Menos Kudos</option>
                    <option value="views-desc">Más Vistos</option>
                    <option value="views-asc">Menos Vistos</option>
                </select>
            </div>
        </div>
    </div>
    <div class="row">

        <div id="formFilterAlert" class="alert alert-danger" style="display: none;" role="alert"></div>

        <span class="mr-suboption-filter">
            Filtrar por...
        </span>
        <div class="mr-filter-container">

            <button class="btn btn-dark mr-custom-btn" onclick="resetFilters()">
                <span><i id="iFavoriteIcon" class="bi bi-trash"></i></span>
            </button>

            <select id="sFilterType" class="mr-custom-select form-select form-select-sm mr-filter-item" name="Type" data-bs-theme="dark" onchange="sendFormFilterGallery()">
                <option value="-1" selected>🖌 ESTILO</option>
                @foreach (var type in MRA.Services.Firebase.Models.Drawing.DRAWING_TYPES.Where(x => x.Key > 0).OrderBy(x => x.Value))
                {
                    <option value="@(type.Key)">@(type.Value)</option>
                }
                <option value="0">(Otros)</option>
            </select>


            <select id="sFilterProduct" class="mr-custom-select form-select form-select-sm mr-filter-item" name="ProductType" data-bs-theme="dark" onchange="sendFormFilterGallery()">
                <option value="-1" selected>TIPO</option>
                @foreach (var type in MRA.Services.Firebase.Models.Drawing.DRAWING_PRODUCT_TYPES.Where(x => x.Key > 0).OrderBy(x => x.Value))
                {
                    <option value="@(type.Key)">@(type.Value)</option>
                }
                <option value="0">(Otro)</option>
            </select>

            <select id="sFilterProductName" class="mr-custom-select form-select form-select-sm mr-filter-item"
                    name="ProductName" data-bs-theme="dark" onchange="sendFormFilterGallery()">
                <option value="" selected>PRODUCTO</option>

                @foreach (var product in Model.ProductNameSelect.Where(x => !String.IsNullOrEmpty(x.Key)).OrderBy(x => x.Key.ToString()))
                {
                    switch (product.Value)
                    {
                        case 1:
                            <option value="@(product.Key)">🎮 @(product.Key)</option>
                            break;
                        case 2:
                            <option value="@(product.Key)">🎬 @(product.Key)</option>
                            break;
                        case 3:
                            <option value="@(product.Key)">🎙 @(product.Key)</option>
                            break;
                        case 4:
                            <option value="@(product.Key)">⚽ @(product.Key)</option>
                            break;
                        default:
                            <option value="@(product.Key)">@(product.Key)</option>
                            break;
                    }
                }
                <option value="none">(Ninguno)</option>

            </select>


            <select id="sFilterModel" class="mr-custom-select form-select form-select-sm mr-filter-item"
                    name="ModelName" data-bs-theme="dark" onchange="sendFormFilterGallery()">

                <option value="" selected>📸 MODELO</option>

                @foreach (var modelName in Model.ModelNameSelect.Where(x => !String.IsNullOrEmpty(x)).OrderBy(x => x.Replace("@", "").ToLower()))
                {
                    <option value="@(modelName)">@(modelName)</option>
                }
                <option value="none">(Ninguno)</option>
            </select>


            <select id="sFilterSoftware" class="mr-custom-select form-select form-select-sm mr-filter-item"
                name="Software" data-bs-theme="dark" onchange="sendFormFilterGallery()">
                <option value="0" selected>💻 SOFTWARE</option>

                @foreach (var type in MRA.Services.Firebase.Models.Drawing.DRAWING_SOFTWARE.Where(x => x.Key > 0).OrderBy(x => x.Value))
                {
                    <option value="@(type.Key)">@(type.Value)</option>
                }
            </select>


            <select id="sFilterPaper" class="mr-custom-select form-select form-select-sm mr-filter-item"
                    name="Paper" data-bs-theme="dark" onchange="sendFormFilterGallery()">
                <option value="0" selected>📄 TAMAÑO</option>

                @foreach (var type in MRA.Services.Firebase.Models.Drawing.DRAWING_PAPER_SIZE.Where(x => x.Key > 0).OrderBy(x => x.Value))
                {
                    <option value="@(type.Key)">@(type.Value)</option>
                }
            </select>



            <div class="mr-choice-filter mr-filter-item">
                <label class="form-check-label choice-label" for="flexSwitchCheckChecked" style="font-weight: bold;">FAVORITOS</label>
                <input class="form-check-input" name="Favorites" type="checkbox" role="switch" value="true" id="flexSwitchCheckChecked" onchange="sendFormFilterGallery()">
            </div>

            @* <div>
                <input type="text" class="form-control" id="iFilterText" name="Textquery" placeholder="Search by Name" onchange="sendFormFilterGallery()">
            </div> *@
        </div>
    </div>

</form>
<div class="row mt-2">

    <div class="mr-loader-container">
        <div id="divImageCounter" class="slide-right">
            <span class="mr-suboption-filter">
                <span id="spResultsCount">@Model.Drawings.Count</span> <span id="spTextoImagenes">imágenes</span><span id="spTextoImagen" style="display: none;">imagen</span>
            </span>
        </div>
        <div id="artGalleryLoader" class="mr-loader" style="display: none;">
            <img src="~/assets/bean eater-0.3s-200px.svg" class="mr-loading-icon-pacman" />
            <span class="mr-loader-subtitle">Filtrando imágenes. Por favor, espere.</span>
        </div>
        <div id="artGallery" class="mr-img-gallery">


                    @foreach (var drawing in Model.Drawings)
                    {
                        await Html.RenderPartialAsync("Images/_ImageThumbnail", new ImageThumbnailModel(drawing));
                    }


        </div>
        <div id="divNoResults" style="display: @(Model.Drawings.Count > 0 ? "none" : "block");">
            <span>
                ¡Nada por aquí..!
            </span>
            <h2>
                😔
            </h2>
            <span>
                Vuelve a intentarlo utilizando otros filtros.
            </span>
        </div>
    </div>

</div>

@section Scripts {
    <script src="~/js/art-gallery.js"></script>
}